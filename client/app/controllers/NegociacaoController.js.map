{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","message","paraData","value","parseInt","parseFloat","focus","apaga","apagaTodos","esvazia","importaNegociacoes","obterNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\r\nimport { \r\n    NegociacoesView,\r\n    MensagemView, \r\n    Mensagem, \r\n    DataInvalidaException, \r\n    DateConverter \r\n} from '../ui/index.js';\r\n\r\nimport { getNegociacaoDao, Bind } from '../util/index.js';\r\n\r\nexport class NegociacaoController {\r\n    constructor(){\r\n        const $ = document.querySelector.bind(document);\r\n\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._negociacoes = new Bind(new Negociacoes(), \r\n        new NegociacoesView('#negociacoes'), \r\n        'adiciona', 'esvazia');\r\n\r\n        this._mensagem = new Bind(new Mensagem(), \r\n        new MensagemView('#mensagemView'), \r\n        'texto');\r\n\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n    }\r\n\r\n    _init(){\r\n        getNegociacaoDao()\r\n        .then(dao => dao.listaTodos())\r\n        .then(negociacoes => \r\n            negociacoes.forEach(negociacao => \r\n                this._negociacoes.adiciona(negociacao)))\r\n        .catch(err => this._mensagem.texto = err);\r\n    }\r\n\r\n    adiciona(event){\r\n        try {\r\n            event.preventDefault();\r\n\r\n            const negociacao = this._criaNegociacao();\r\n\r\n            getNegociacaoDao()\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(()=> {\r\n                this._negociacoes.adiciona(this._criaNegociacao());\r\n\r\n                this._mensagem.texto = \"Negociação adicionada com sucesso!\";\r\n    \r\n                this._limpaFormulario();\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n\r\n            if(err instanceof DataInvalidaException){\r\n                this._mensagem.texto = err.message;\r\n            }else {\r\n                this._mensagem.texto = 'Um erro inesperado aconteceu. Entre em contato com o suporte';\r\n            }\r\n        }\r\n    }\r\n\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n    }\r\n\r\n    _limpaFormulario(){\r\n        this._inputData.value = \"\";\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();\r\n    }\r\n\r\n    apaga(){\r\n        getNegociacaoDao()\r\n        .then(dao => dao.apagaTodos())\r\n        .then(()=> {\r\n            this._negociacoes.esvazia();\r\n\r\n            this._mensagem.texto = 'Negociações apagadas com sucesso!';\r\n        })\r\n        .catch(err => this._mensagem.texto = err);\r\n    }\r\n\r\n    importaNegociacoes(){\r\n        this._service.obterNegociacoesDoPeriodo()\r\n        .then(negociacoes => {\r\n            negociacoes\r\n            .filter(novaNegociacao => !this._negociacoes\r\n                .paraArray()\r\n                .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\r\n            .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n\r\n            this._mensagem.texto = 'Negociações do período importadas com sucesso!';\r\n        })\r\n        .catch(err => this._mensagem.texto = err);\r\n    }\r\n}"]}