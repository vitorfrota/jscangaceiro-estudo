{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","ApplicationException","Negociacao","URL","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","data","quantidade","valor","Date","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime"],"mappings":";;;;;;AAASA,uB,gBAAAA,W;AAAaC,gC,gBAAAA,oB;;AACbC,sB,iBAAAA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAET,kBAAMC,MAAM,wBAAZ;;AAEO,kBAAMC,iBAAN,CAAwB;AAC3BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIN,WAAJ,EAAb;AACH;;AAEDO,2CAA0B;AACtB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAgB,GAAEL,GAAI,oBAAtB,EACNM,IADM,CACDC,SAASA,MAAMC,GAAN,CAAU,CAAC,EAAEC,IAAF,EAAQC,UAAR,EAAoBC,KAApB,EAAD,KAAiC,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASH,IAAT,CAAf,EAA+BC,UAA/B,EAA2CC,KAA3C,CAA3C,CADR,EAELE,OAAO;AACL,8BAAM,IAAIf,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,qBAJM,CAAP;AAMH;;AAEDgB,mDAAkC;AAC9B,2BAAO,KAAKX,KAAL,CAAWE,GAAX,CAAgB,GAAEL,GAAI,sBAAtB,EACNM,IADM,CACDC,SAASA,MAAMC,GAAN,CAAU,CAAC,EAAEC,IAAF,EAAQC,UAAR,EAAoBC,KAApB,EAAD,KAAiC,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASH,IAAT,CAAf,EAA+BC,UAA/B,EAA2CC,KAA3C,CAA3C,CADR,EAELE,OAAO;AACL,8BAAM,IAAIf,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,qBAJM,CAAP;AAMH;;AAEDiB,oDAAmC;AAC/B,2BAAO,KAAKZ,KAAL,CAAWE,GAAX,CAAgB,GAAEL,GAAI,uBAAtB,EACNM,IADM,CACDC,SAASA,MAAMC,GAAN,CAAU,CAAC,EAAEC,IAAF,EAAQC,UAAR,EAAoBC,KAApB,EAAD,KAAiC,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASH,IAAT,CAAf,EAA+BC,UAA/B,EAA2CC,KAA3C,CAA3C,CADR,EAELE,OAAO;AACL,8BAAM,IAAIf,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,qBAJM,CAAP;AAMH;;AAEKkB,yCAAN,GAAiC;AAAA;;AAAA;AAC7B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKf,wBAAL,EAD4B,EAE5B,MAAKU,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;;AAMA,mCAAOE,QAAQG,MAAR,CAAe,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAoBD,UAAUE,MAAV,CAAiBD,IAAjB,CAApB;AAAA,6BAAf,EAA2D,EAA3D,EACFE,IADE,CACG,UAACC,CAAD,EAAGC,CAAH;AAAA,uCAAQA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAA3B;AAAA,6BADH,CAAP;AAEH,yBATD,CASC,OAAMd,GAAN,EAAU;AACP,kCAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAZ4B;AAahC;AA7C0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService, ApplicationException } from '../../util/index.js'; \r\nimport { Negociacao } from './Negociacao.js';\r\n\r\nconst URL = 'http://localhost:3000/';\r\n\r\nexport class NegociacaoService {\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n        return this._http.get(`${URL}negociacoes/semana`)\r\n        .then(dados => dados.map(({ data, quantidade, valor }) => new Negociacao(new Date(data), quantidade, valor))\r\n        , err => {\r\n            throw new ApplicationException('Não foi possível obter as negociações!');\r\n        }\r\n        );\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        return this._http.get(`${URL}negociacoes/anterior`)\r\n        .then(dados => dados.map(({ data, quantidade, valor }) => new Negociacao(new Date(data), quantidade, valor))\r\n        , err => {\r\n            throw new ApplicationException('Não foi possível obter as negociações!');\r\n        }\r\n        );\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        return this._http.get(`${URL}negociacoes/retrasada`)\r\n        .then(dados => dados.map(({ data, quantidade, valor }) => new Negociacao(new Date(data), quantidade, valor))\r\n        , err => {\r\n            throw new ApplicationException('Não foi possível obter as negociações!');\r\n        }\r\n        );\r\n    }\r\n\r\n    async obterNegociacoesDoPeriodo(){\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()\r\n            ]);\r\n\r\n            return periodo.reduce((novoArray, item)=> novoArray.concat(item), [])\r\n                .sort((a,b)=> b.data.getTime() - a.data.getTime());\r\n        }catch(err){      \r\n            throw new ApplicationException('Não foi possível obter as negociações do período');\r\n        }\r\n    }\r\n}"]}